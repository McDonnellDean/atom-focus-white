atom-text-editor {
  background-color: @syntax-background-color;
  color: @syntax-text-color;

  .invisible-character{
    color: @syntax-invisible-character-color;
  }

  .indent-guide {
    color: @syntax-indent-guide-color;
  }

  .gutter {
    background-color: @syntax-gutter-background-color;
    color: @syntax-gutter-text-color;
  }

  .gutter .line-number {
    opacity: 1;
  }

  .gutter .line-number.folded,
  .gutter .line-number:after,
  .fold-marker:after {
    color: @red;
  }

  .cursor {
    border-color: @syntax-cursor-color;
  }

  .selection .region {
    background-color: @syntax-selection-color;
  }

  .line-number.cursor-line {
    background-color: @syntax-gutter-background-color-selected;
  }
}

.bracket-matcher .region {
  background-color: @grey;
  opacity: 0.5;
}

.syntax--comment {
  color: @green;
  font-style: italic;
}

.syntax--entity {
  color: @black;

  .syntax--punctuation {
    color: @black
  }
}

.syntax--keyword {
  color: @black;

  &.syntax--other {
    &.syntax--special-method {
      color: black;
    }
  }
}

.syntax--storage.syntax--type,
.syntax--storage.syntax--modifier {
  color: @black;
}

.syntax--constant {
  color: @syntax-color-constant;

  &.syntax--numeric,
  &.syntax--boolean,
  &.syntax--symbol, &.syntax--symbol .syntax--punctuation {
    color: @black;
  }

  &.syntax--symbol.syntax--hashkey {
    color: @black;

    .syntax--punctuation {
      color: @black;
    }
  }
}

.syntax--delimiter, .syntax--brace {
  color: @black;
}

.syntax--delimiter.syntax--period {
  color: @black;
}

.syntax--invalid.syntax--deprecated {
  text-decoration: underline;
  color: @red;
}

.syntax--method.syntax--name {
  color: @black;
}
.syntax--property-name {
  color: @syntax-color-property;
}

.syntax--invalid.syntax--illegal,
.syntax--operator.syntax--assignment,
.syntax--parameter,
.syntax--property-value {
  .syntax--unit {
    color: @red;
  }
}

.syntax--string {
  color: @red;

  .syntax--constant.syntax--character.syntax--escape,
  .syntax--punctuation.syntax--string {
    color: @red;
  }

  &.syntax--regexp {
    color: @red;

    .syntax--string.syntax--regexp.syntax--arbitrary-repetition {
      color: @red;
    }
  }
}

.syntax--variable {
  color: @syntax-color-variable;

  &.syntax--constant {
    color: @syntax-color-constant;
  }
}
